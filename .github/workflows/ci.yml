name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run Formatter Check (Black)
        run: black --check .

      - name: Run Linter (Flake8)
        run: flake8 .

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies and project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run tests with pytest
        run: python -m pytest

  run-agent:
    name: Run Agent Simulation
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies and project
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Create .env from Secrets
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          printf "OPENAI_API_KEY=%s\n" "$OPENAI_API_KEY" > .env

      - name: Run Free-AI and capture logs
        env:
          PYTHONUNBUFFERED: 1
        run: |
          set -o pipefail
          python main.py 2>&1 | tee agent.log

      - name: Upload run logs
        uses: actions/upload-artifact@v4
        with:
          name: free-ai-agent-log
          path: agent.log
